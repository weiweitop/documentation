I"C<p>Installation of Jekyll on Mac is usually less problematic than on Windows. However, you may run into permissions issues with Ruby that you must overcome. You should also use Bundler to be sure that you have all the required gems and other utilities on your computer to make the project run.</p>

<ul id="markdown-toc">
  <li><a href="#ruby-and-rubygems" id="markdown-toc-ruby-and-rubygems">Ruby and RubyGems</a></li>
  <li><a href="#install-homebrew" id="markdown-toc-install-homebrew">Install Homebrew</a></li>
  <li><a href="#install-ruby-through-homebrew" id="markdown-toc-install-ruby-through-homebrew">Install Ruby through Homebrew</a></li>
  <li><a href="#serve-the-jekyll-documentation-theme" id="markdown-toc-serve-the-jekyll-documentation-theme">Serve the Jekyll Documentation theme</a></li>
</ul>

<h2 id="ruby-and-rubygems">Ruby and RubyGems</h2>

<p>Ruby and <a href="https://rubygems.org/pages/download">RubyGems</a> are usually installed by default on Macs. Open your Terminal and type <code>which ruby</code> and  <code>which gem</code> to confirm that you have Ruby and Rubygems. You should get a response indicating the location of Ruby and Rubygems.</p>

<p>If you get responses that look like this:</p>

<pre><code>/usr/local/bin/ruby
</code></pre>

<p>and</p>

<pre><code>/usr/local/bin/gem
</code></pre>

<p>Great! Skip down to the <a href="#bundler">Bundler</a> section.</p>

<p>However, if your location is something like <code>/Users/MacBookPro/.rvm/rubies/ruby-2.2.1/bin/gem</code>, which points to your system location of Rubygems, you will likely run into permissions errors when trying to get a gem. A sample permissions error (triggered when you try to install the jekyll gem such as <code>gem install jekyll</code>) might look like this for Rubygems:</p>

<pre><code> &gt;ERROR:  While executing gem ... (Gem::FilePermissionError)
  You don't have write permissions for the /Library/Ruby/Gems/2.0.0 directory.
</code></pre>

<p>Instead of changing the write permissions on your operating system’s version of Ruby and Rubygems (which could pose security issues), you can install another instance of Ruby (one that is writable) to get around this.</p>

<h2 id="install-homebrew">Install Homebrew</h2>

<p>Homebrew is a package manager for the Mac, and you can use it to install an alternative instance of Ruby code. To install Homebrew, run this command:</p>

<pre><code>/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
</code></pre>

<p>If you already had Homebrew installed on your computer, be sure to update it:</p>

<pre><code>brew update
</code></pre>

<h2 id="install-ruby-through-homebrew">Install Ruby through Homebrew</h2>

<p>Now use Homebrew to install Ruby:</p>

<pre><code>brew install ruby
</code></pre>

<p>Log out of terminal, and then then log back in.</p>

<p>When you type <code>which ruby</code> and <code>which gem</code>, you should get responses like this:</p>

<pre><code>/usr/local/bin/ruby
</code></pre>

<p>And this:</p>

<pre><code>/usr/local/bin/gem
</code></pre>

<p>Now Ruby and Rubygems are installed under your username, so these directories are writeable.</p>

<p>Note that if you don’t see these user-specific paths, try restarting your computer. If you’re still having trouble, try making these directories writeable. If that still doesn’t work, try installing rbenv, which is a Ruby version management tool. If you still have issues getting a writeable version of Ruby, you need to resolve them before installing Bundler.</p>

<h2 id="bundler">Install the Jekyll gem</h2>

<p>At this point you should have a writeable version of Ruby and Rubygem on your machine.</p>

<p>Now use <code>gem</code> to install Jekyll:</p>

<pre><code>gem install jekyll
</code></pre>

<h2 id="serve-the-jekyll-documentation-theme">Serve the Jekyll Documentation theme</h2>

<ol>
  <li>Browse to the directory where you downloaded the Documentation theme for Jekyll.</li>
  <li>Type <code>jekyll serve</code></li>
  <li>Go to the preview address in the browser.</li>
</ol>

<!-- left blank intentionally. intended to be overwritten in custom projects. -->

:ET